# Whenever a tag push matching pattern "v*" then run the job
on:
  push:
    branches:
      - "feature/releases"
      - "main"

jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action aa
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
      # Always include the checkout step so that 
      # your project is available for Godot to export
      - name: checkout
        uses: actions/checkout@v4

      - name: export game
        id: export
        # Use latest version (see releases for all versions)
        uses: firebelley/godot-export@v6.0.0
        with:
          # Defining all the required inputs
          godot_executable_download_url: https://downloads.tuxfamily.org/godotengine/4.0/Godot_v4.0-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://downloads.tuxfamily.org/godotengine/4.0/Godot_v4.0-stable_export_templates.tpz
          relative_project_path: ./dont-forget
          archive_output: true

          # Step 3: Verify Export Output and Upload Artifact
      - name: Verify Export Output
        run: |
          ls -al ${{ steps.export.outputs.archive_directory }}  # List the exported files to verify the location

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: exported-game
          path: ${{ steps.export.outputs.archive_directory }}/*

        # This release action has worked well for me. However, you can most likely use any release action of your choosing.
        # https://github.com/ncipollo/release-action
      - name: create release
        uses: ncipollo/release-action@v1.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
          tag: ${{ github.ref_name }}
          artifacts: ${{ steps.export.outputs.archive_directory }}/*